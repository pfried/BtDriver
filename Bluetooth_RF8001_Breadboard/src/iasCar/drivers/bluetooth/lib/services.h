/* 
* Copyright (c) 2013, Nordic Semiconductor ASA
* All rights reserved.
* 
* Redistribution and use in source and binary forms, with or without modification,
* are permitted provided that the following conditions are met:
* 
* - Redistributions of source code must retain the above copyright notice, this
*   list of conditions and the following disclaimer.
* 
* - Redistributions in binary form must reproduce the above copyright notice, this
*   list of conditions and the following disclaimer in the documentation and/or
*   other materials provided with the distribution.
* 
* - The name of Nordic Semiconductor ASA may not be used to endorse or promote
*   products derived from this software without specific prior written permission.
* 
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
* ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
* WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
* DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
* ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
* (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
* LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
* ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
* SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

/**
* This file is autogenerated by nRFgo Studio 1.16.1.3119 
*/

#ifndef SETUP_MESSAGES_H__
#define SETUP_MESSAGES_H__

#include "hal_platform.h" 
#include "aci.h"
#include <stdbool.h>


#define SETUP_ID 0
#define SETUP_FORMAT 3 /** nRF8001 D */
#define ACI_DYNAMIC_DATA_SIZE 237

/* Service: Gap - Characteristic: Device name - Pipe: SET */
#define PIPE_GAP_DEVICE_NAME_SET          1
#define PIPE_GAP_DEVICE_NAME_SET_MAX_SIZE 10

/* Service: Brightness - Characteristic: Brightness - Pipe: TX */
#define PIPE_BRIGHTNESS_BRIGHTNESS_TX          2
#define PIPE_BRIGHTNESS_BRIGHTNESS_TX_MAX_SIZE 2

/* Service: Distance - Characteristic: DistanceIRFront - Pipe: TX */
#define PIPE_DISTANCE_DISTANCEIRFRONT_TX          3
#define PIPE_DISTANCE_DISTANCEIRFRONT_TX_MAX_SIZE 2

/* Service: Distance - Characteristic: DistanceIRRear - Pipe: TX */
#define PIPE_DISTANCE_DISTANCEIRREAR_TX          4
#define PIPE_DISTANCE_DISTANCEIRREAR_TX_MAX_SIZE 2

/* Service: Distance - Characteristic: DistanceUSFront - Pipe: TX */
#define PIPE_DISTANCE_DISTANCEUSFRONT_TX          5
#define PIPE_DISTANCE_DISTANCEUSFRONT_TX_MAX_SIZE 2

/* Service: Distance - Characteristic: DistanceUSRear - Pipe: TX */
#define PIPE_DISTANCE_DISTANCEUSREAR_TX          6
#define PIPE_DISTANCE_DISTANCEUSREAR_TX_MAX_SIZE 2

/* Service: Distance - Characteristic: SensorServo - Pipe: RX */
#define PIPE_DISTANCE_SENSORSERVO_RX          7
#define PIPE_DISTANCE_SENSORSERVO_RX_MAX_SIZE 2

/* Service: Lights - Characteristic: Lights - Pipe: RX_ACK_AUTO */
#define PIPE_LIGHTS_LIGHTS_RX_ACK_AUTO          8
#define PIPE_LIGHTS_LIGHTS_RX_ACK_AUTO_MAX_SIZE 1

/* Service: Horn - Characteristic: Horn - Pipe: RX */
#define PIPE_HORN_HORN_RX          9
#define PIPE_HORN_HORN_RX_MAX_SIZE 1

/* Service: Drive - Characteristic: SpeedAndAngle - Pipe: RX */
#define PIPE_DRIVE_SPEEDANDANGLE_RX          10
#define PIPE_DRIVE_SPEEDANDANGLE_RX_MAX_SIZE 4

/* Service: Drive - Characteristic: SpeedMode - Pipe: RX_ACK_AUTO */
#define PIPE_DRIVE_SPEEDMODE_RX_ACK_AUTO          11
#define PIPE_DRIVE_SPEEDMODE_RX_ACK_AUTO_MAX_SIZE 1

/* Service: BatteryLevel - Characteristic: BatteryLevel - Pipe: TX */
#define PIPE_BATTERYLEVEL_BATTERYLEVEL_TX          12
#define PIPE_BATTERYLEVEL_BATTERYLEVEL_TX_MAX_SIZE 2

/* Service: Generic - Characteristic: GenericActor1 - Pipe: RX_ACK_AUTO */
#define PIPE_GENERIC_GENERICACTOR1_RX_ACK_AUTO          13
#define PIPE_GENERIC_GENERICACTOR1_RX_ACK_AUTO_MAX_SIZE 2

/* Service: Generic - Characteristic: GenericActor2 - Pipe: RX_ACK_AUTO */
#define PIPE_GENERIC_GENERICACTOR2_RX_ACK_AUTO          14
#define PIPE_GENERIC_GENERICACTOR2_RX_ACK_AUTO_MAX_SIZE 2

/* Service: Generic - Characteristic: GenericSensor1 - Pipe: TX */
#define PIPE_GENERIC_GENERICSENSOR1_TX          15
#define PIPE_GENERIC_GENERICSENSOR1_TX_MAX_SIZE 2

/* Service: Generic - Characteristic: GenericSensor2 - Pipe: TX */
#define PIPE_GENERIC_GENERICSENSOR2_TX          16
#define PIPE_GENERIC_GENERICSENSOR2_TX_MAX_SIZE 2


#define NUMBER_OF_PIPES 16

#define SERVICES_PIPE_TYPE_MAPPING_CONTENT {\
  {ACI_STORE_LOCAL, ACI_SET},   \
  {ACI_STORE_LOCAL, ACI_TX},   \
  {ACI_STORE_LOCAL, ACI_TX},   \
  {ACI_STORE_LOCAL, ACI_TX},   \
  {ACI_STORE_LOCAL, ACI_TX},   \
  {ACI_STORE_LOCAL, ACI_TX},   \
  {ACI_STORE_LOCAL, ACI_RX},   \
  {ACI_STORE_LOCAL, ACI_RX_ACK_AUTO},   \
  {ACI_STORE_LOCAL, ACI_RX},   \
  {ACI_STORE_LOCAL, ACI_RX},   \
  {ACI_STORE_LOCAL, ACI_RX_ACK_AUTO},   \
  {ACI_STORE_LOCAL, ACI_TX},   \
  {ACI_STORE_LOCAL, ACI_RX_ACK_AUTO},   \
  {ACI_STORE_LOCAL, ACI_RX_ACK_AUTO},   \
  {ACI_STORE_LOCAL, ACI_TX},   \
  {ACI_STORE_LOCAL, ACI_TX},   \
}

#define GAP_PPCP_MAX_CONN_INT 0xffff /**< Maximum connection interval as a multiple of 1.25 msec , 0xFFFF means no specific value requested */
#define GAP_PPCP_MIN_CONN_INT  0xffff /**< Minimum connection interval as a multiple of 1.25 msec , 0xFFFF means no specific value requested */
#define GAP_PPCP_SLAVE_LATENCY 0
#define GAP_PPCP_CONN_TIMEOUT 0xffff /** Connection Supervision timeout multiplier as a multiple of 10msec, 0xFFFF means no specific value requested */

/** @brief do a set_local_data for PIPE_GAP_DEVICE_NAME_SET
 *  @param src source buffer to send data from
 *  @param size the number of bytes to send. Maximum size is 10
 *  @details use this function to do a set_local_data for PIPE_GAP_DEVICE_NAME_SET. If no transaction are currently
 *  running, the set will be immediate, otherwise, it will be done at the end of the current transaction
 *  when services_update_pipes will be called.
 */
void services_set_gap_device_name(void *src, int size);

/** @brief send a new value for PIPE_BRIGHTNESS_BRIGHTNESS_TX
 *  @param src source buffer to send data from
 *  @param size the number of bytes to send. Maximum size is 2
 *  @param is_freshest_sample set it to true if you want to overwrite an eventual pending transaction on this pipe.
 *  @details use this function to send a new value for PIPE_BRIGHTNESS_BRIGHTNESS_TX. If no transaction are currently
 *  running, the send will be immediate, otherwise, it will be done at the end of the current transaction
 *  when services_update_pipes will be called. If a transaction on this pipe is already pending, then this function
 *  will not overwrite the data of the previous transaction and return false.
 *  @return : true if is_freshest_sample true, otherwise return false if a transaction on this pipe is already pending, true otherwise.
 */
bool services_send_brightness_brightness(void *src, int size, bool is_freshest_sample);

/** @brief send a new value for PIPE_DISTANCE_DISTANCEIRFRONT_TX
 *  @param src source buffer to send data from
 *  @param size the number of bytes to send. Maximum size is 2
 *  @param is_freshest_sample set it to true if you want to overwrite an eventual pending transaction on this pipe.
 *  @details use this function to send a new value for PIPE_DISTANCE_DISTANCEIRFRONT_TX. If no transaction are currently
 *  running, the send will be immediate, otherwise, it will be done at the end of the current transaction
 *  when services_update_pipes will be called. If a transaction on this pipe is already pending, then this function
 *  will not overwrite the data of the previous transaction and return false.
 *  @return : true if is_freshest_sample true, otherwise return false if a transaction on this pipe is already pending, true otherwise.
 */
bool services_send_distance_distanceirfront(void *src, int size, bool is_freshest_sample);

/** @brief send a new value for PIPE_DISTANCE_DISTANCEIRREAR_TX
 *  @param src source buffer to send data from
 *  @param size the number of bytes to send. Maximum size is 2
 *  @param is_freshest_sample set it to true if you want to overwrite an eventual pending transaction on this pipe.
 *  @details use this function to send a new value for PIPE_DISTANCE_DISTANCEIRREAR_TX. If no transaction are currently
 *  running, the send will be immediate, otherwise, it will be done at the end of the current transaction
 *  when services_update_pipes will be called. If a transaction on this pipe is already pending, then this function
 *  will not overwrite the data of the previous transaction and return false.
 *  @return : true if is_freshest_sample true, otherwise return false if a transaction on this pipe is already pending, true otherwise.
 */
bool services_send_distance_distanceirrear(void *src, int size, bool is_freshest_sample);

/** @brief send a new value for PIPE_DISTANCE_DISTANCEUSFRONT_TX
 *  @param src source buffer to send data from
 *  @param size the number of bytes to send. Maximum size is 2
 *  @param is_freshest_sample set it to true if you want to overwrite an eventual pending transaction on this pipe.
 *  @details use this function to send a new value for PIPE_DISTANCE_DISTANCEUSFRONT_TX. If no transaction are currently
 *  running, the send will be immediate, otherwise, it will be done at the end of the current transaction
 *  when services_update_pipes will be called. If a transaction on this pipe is already pending, then this function
 *  will not overwrite the data of the previous transaction and return false.
 *  @return : true if is_freshest_sample true, otherwise return false if a transaction on this pipe is already pending, true otherwise.
 */
bool services_send_distance_distanceusfront(void *src, int size, bool is_freshest_sample);

/** @brief send a new value for PIPE_DISTANCE_DISTANCEUSREAR_TX
 *  @param src source buffer to send data from
 *  @param size the number of bytes to send. Maximum size is 2
 *  @param is_freshest_sample set it to true if you want to overwrite an eventual pending transaction on this pipe.
 *  @details use this function to send a new value for PIPE_DISTANCE_DISTANCEUSREAR_TX. If no transaction are currently
 *  running, the send will be immediate, otherwise, it will be done at the end of the current transaction
 *  when services_update_pipes will be called. If a transaction on this pipe is already pending, then this function
 *  will not overwrite the data of the previous transaction and return false.
 *  @return : true if is_freshest_sample true, otherwise return false if a transaction on this pipe is already pending, true otherwise.
 */
bool services_send_distance_distanceusrear(void *src, int size, bool is_freshest_sample);

/** @brief send a new value for PIPE_BATTERYLEVEL_BATTERYLEVEL_TX
 *  @param src source buffer to send data from
 *  @param size the number of bytes to send. Maximum size is 2
 *  @param is_freshest_sample set it to true if you want to overwrite an eventual pending transaction on this pipe.
 *  @details use this function to send a new value for PIPE_BATTERYLEVEL_BATTERYLEVEL_TX. If no transaction are currently
 *  running, the send will be immediate, otherwise, it will be done at the end of the current transaction
 *  when services_update_pipes will be called. If a transaction on this pipe is already pending, then this function
 *  will not overwrite the data of the previous transaction and return false.
 *  @return : true if is_freshest_sample true, otherwise return false if a transaction on this pipe is already pending, true otherwise.
 */
bool services_send_batterylevel_batterylevel(void *src, int size, bool is_freshest_sample);

/** @brief send a new value for PIPE_GENERIC_GENERICSENSOR1_TX
 *  @param src source buffer to send data from
 *  @param size the number of bytes to send. Maximum size is 2
 *  @param is_freshest_sample set it to true if you want to overwrite an eventual pending transaction on this pipe.
 *  @details use this function to send a new value for PIPE_GENERIC_GENERICSENSOR1_TX. If no transaction are currently
 *  running, the send will be immediate, otherwise, it will be done at the end of the current transaction
 *  when services_update_pipes will be called. If a transaction on this pipe is already pending, then this function
 *  will not overwrite the data of the previous transaction and return false.
 *  @return : true if is_freshest_sample true, otherwise return false if a transaction on this pipe is already pending, true otherwise.
 */
bool services_send_generic_genericsensor1(void *src, int size, bool is_freshest_sample);

/** @brief send a new value for PIPE_GENERIC_GENERICSENSOR2_TX
 *  @param src source buffer to send data from
 *  @param size the number of bytes to send. Maximum size is 2
 *  @param is_freshest_sample set it to true if you want to overwrite an eventual pending transaction on this pipe.
 *  @details use this function to send a new value for PIPE_GENERIC_GENERICSENSOR2_TX. If no transaction are currently
 *  running, the send will be immediate, otherwise, it will be done at the end of the current transaction
 *  when services_update_pipes will be called. If a transaction on this pipe is already pending, then this function
 *  will not overwrite the data of the previous transaction and return false.
 *  @return : true if is_freshest_sample true, otherwise return false if a transaction on this pipe is already pending, true otherwise.
 */
bool services_send_generic_genericsensor2(void *src, int size, bool is_freshest_sample);

/** @brief function to trig pending transaction on pipes
 *  @details This function check for each pipe if it has a pending transaction (send/rx_request/ack)
 *   and if so executes this transaction.
 *   This function should be called in the APP_RUN state of the process function of the application.
 */
void services_update_pipes(void);

#define NB_SETUP_MESSAGES 49
#define SETUP_MESSAGES_CONTENT {\
    {0x00,\
        {\
            0x07,0x06,0x00,0x00,0x03,0x02,0x41,0xfe,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x10,0x01,0x01,0x00,0x00,0x06,0x00,0x01,\
            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x10,0x1c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x90,0x01,0xff,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x10,0x38,0xff,0xff,0x02,0x58,0x0a,0x05,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
        },\
    },\
    {0x00,\
        {\
            0x05,0x06,0x10,0x54,0x00,0x00,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x20,0x00,0x04,0x04,0x02,0x02,0x00,0x01,0x28,0x00,0x01,0x00,0x18,0x04,0x04,0x05,0x05,0x00,\
            0x02,0x28,0x03,0x01,0x0e,0x03,0x00,0x00,0x2a,0x04,0x14,0x0a,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x20,0x1c,0x06,0x00,0x03,0x2a,0x00,0x01,0x69,0x61,0x73,0x43,0x61,0x72,0x73,0x65,0x6d,0x69,\
            0x04,0x04,0x05,0x05,0x00,0x04,0x28,0x03,0x01,0x02,0x05,0x00,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x20,0x38,0x01,0x2a,0x06,0x04,0x03,0x02,0x00,0x05,0x2a,0x01,0x01,0x00,0x00,0x04,0x04,0x05,\
            0x05,0x00,0x06,0x28,0x03,0x01,0x02,0x07,0x00,0x04,0x2a,0x06,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x20,0x54,0x04,0x09,0x08,0x00,0x07,0x2a,0x04,0x01,0xff,0xff,0xff,0xff,0x00,0x00,0xff,0xff,\
            0x04,0x04,0x02,0x02,0x00,0x08,0x28,0x00,0x01,0x01,0x18,0x04,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x20,0x70,0x04,0x02,0x02,0x00,0x09,0x28,0x00,0x01,0x50,0x00,0x04,0x04,0x13,0x13,0x00,0x0a,\
            0x28,0x03,0x01,0x12,0x0b,0x00,0x1b,0xc5,0xd5,0xa5,0x02,0x00,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x20,0x8c,0xf3,0xa4,0xe3,0x11,0x70,0xe6,0x51,0x00,0x5f,0x5d,0x16,0x04,0x03,0x02,0x00,0x0b,\
            0x00,0x51,0x02,0x00,0x00,0x46,0x14,0x03,0x02,0x00,0x0c,0x29,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x20,0xa8,0x02,0x01,0x00,0x00,0x04,0x04,0x10,0x10,0x00,0x0d,0x28,0x00,0x01,0x1b,0xc5,0xd5,\
            0xa5,0x02,0x00,0xf3,0xa4,0xe3,0x11,0x70,0xe6,0x40,0x00,0x5f,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x20,0xc4,0x5d,0x04,0x04,0x13,0x13,0x00,0x0e,0x28,0x03,0x01,0x12,0x0f,0x00,0x1b,0xc5,0xd5,\
            0xa5,0x02,0x00,0xf3,0xa4,0xe3,0x11,0x70,0xe6,0x43,0x00,0x5f,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x20,0xe0,0x5d,0x16,0x04,0x03,0x02,0x00,0x0f,0x00,0x43,0x02,0x00,0x00,0x46,0x14,0x03,0x02,\
            0x00,0x10,0x29,0x02,0x01,0x00,0x00,0x04,0x04,0x13,0x13,0x00,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x20,0xfc,0x11,0x28,0x03,0x01,0x12,0x12,0x00,0x1b,0xc5,0xd5,0xa5,0x02,0x00,0xf3,0xa4,0xe3,\
            0x11,0x70,0xe6,0x44,0x00,0x5f,0x5d,0x16,0x04,0x03,0x02,0x00,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x21,0x18,0x12,0x00,0x44,0x02,0x00,0x00,0x46,0x14,0x03,0x02,0x00,0x13,0x29,0x02,0x01,0x00,\
            0x00,0x04,0x04,0x13,0x13,0x00,0x14,0x28,0x03,0x01,0x12,0x15,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x21,0x34,0x00,0x1b,0xc5,0xd5,0xa5,0x02,0x00,0xf3,0xa4,0xe3,0x11,0x70,0xe6,0x41,0x00,0x5f,\
            0x5d,0x16,0x04,0x03,0x02,0x00,0x15,0x00,0x41,0x02,0x00,0x00,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x21,0x50,0x46,0x14,0x03,0x02,0x00,0x16,0x29,0x02,0x01,0x00,0x00,0x04,0x04,0x13,0x13,0x00,\
            0x17,0x28,0x03,0x01,0x12,0x18,0x00,0x1b,0xc5,0xd5,0xa5,0x02,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x21,0x6c,0x00,0xf3,0xa4,0xe3,0x11,0x70,0xe6,0x42,0x00,0x5f,0x5d,0x16,0x04,0x03,0x02,0x00,\
            0x18,0x00,0x42,0x02,0x00,0x00,0x46,0x14,0x03,0x02,0x00,0x19,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x21,0x88,0x29,0x02,0x01,0x00,0x00,0x04,0x04,0x13,0x13,0x00,0x1a,0x28,0x03,0x01,0x06,0x1b,\
            0x00,0x1b,0xc5,0xd5,0xa5,0x02,0x00,0xf3,0xa4,0xe3,0x11,0x70,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x21,0xa4,0xe6,0x45,0x00,0x5f,0x5d,0x46,0x14,0x03,0x02,0x00,0x1b,0x00,0x45,0x02,0x00,0x00,\
            0x04,0x04,0x10,0x10,0x00,0x1c,0x28,0x00,0x01,0x1b,0xc5,0xd5,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x21,0xc0,0xa5,0x02,0x00,0xf3,0xa4,0xe3,0x11,0x70,0xe6,0x20,0x00,0x5f,0x5d,0x04,0x04,0x13,\
            0x13,0x00,0x1d,0x28,0x03,0x01,0x0a,0x1e,0x00,0x1b,0xc5,0xd5,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x21,0xdc,0xa5,0x02,0x00,0xf3,0xa4,0xe3,0x11,0x70,0xe6,0x21,0x00,0x5f,0x5d,0x46,0x14,0x02,\
            0x01,0x00,0x1e,0x00,0x21,0x02,0x00,0x04,0x04,0x10,0x10,0x00,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x21,0xf8,0x1f,0x28,0x00,0x01,0x1b,0xc5,0xd5,0xa5,0x02,0x00,0xf3,0xa4,0xe3,0x11,0x70,0xe6,\
            0x10,0x00,0x5f,0x5d,0x04,0x04,0x13,0x13,0x00,0x20,0x28,0x03,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x22,0x14,0x01,0x06,0x21,0x00,0x1b,0xc5,0xd5,0xa5,0x02,0x00,0xf3,0xa4,0xe3,0x11,0x70,0xe6,\
            0x11,0x00,0x5f,0x5d,0x46,0x14,0x02,0x01,0x00,0x21,0x00,0x11,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x22,0x30,0x02,0x00,0x04,0x04,0x10,0x10,0x00,0x22,0x28,0x00,0x01,0x1b,0xc5,0xd5,0xa5,0x02,\
            0x00,0xf3,0xa4,0xe3,0x11,0x70,0xe6,0x00,0x00,0x5f,0x5d,0x04,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x22,0x4c,0x04,0x13,0x13,0x00,0x23,0x28,0x03,0x01,0x06,0x24,0x00,0x1b,0xc5,0xd5,0xa5,0x02,\
            0x00,0xf3,0xa4,0xe3,0x11,0x70,0xe6,0x01,0x00,0x5f,0x5d,0x46,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x22,0x68,0x14,0x05,0x04,0x00,0x24,0x00,0x01,0x02,0x00,0x00,0x00,0x00,0x04,0x04,0x13,0x13,\
            0x00,0x25,0x28,0x03,0x01,0x0a,0x26,0x00,0x1b,0xc5,0xd5,0xa5,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x22,0x84,0x02,0x00,0xf3,0xa4,0xe3,0x11,0x70,0xe6,0x02,0x00,0x5f,0x5d,0x46,0x14,0x02,0x01,\
            0x00,0x26,0x00,0x02,0x02,0x00,0x04,0x04,0x10,0x10,0x00,0x27,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x22,0xa0,0x28,0x00,0x01,0x1b,0xc5,0xd5,0xa5,0x02,0x00,0xf3,0xa4,0xe3,0x11,0x70,0xe6,0x30,\
            0x00,0x5f,0x5d,0x04,0x04,0x13,0x13,0x00,0x28,0x28,0x03,0x01,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x22,0xbc,0x12,0x29,0x00,0x1b,0xc5,0xd5,0xa5,0x02,0x00,0xf3,0xa4,0xe3,0x11,0x70,0xe6,0x31,\
            0x00,0x5f,0x5d,0x16,0x04,0x03,0x02,0x00,0x29,0x00,0x31,0x02,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x22,0xd8,0x00,0x00,0x46,0x14,0x03,0x02,0x00,0x2a,0x29,0x02,0x01,0x00,0x00,0x04,0x04,0x10,\
            0x10,0x00,0x2b,0x28,0x00,0x01,0x1b,0xc5,0xd5,0xa5,0x02,0x00,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x22,0xf4,0xf3,0xa4,0xe3,0x11,0x70,0xe6,0x70,0x00,0x5f,0x5d,0x04,0x04,0x13,0x13,0x00,0x2c,\
            0x28,0x03,0x01,0x0a,0x2d,0x00,0x1b,0xc5,0xd5,0xa5,0x02,0x00,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x23,0x10,0xf3,0xa4,0xe3,0x11,0x70,0xe6,0x71,0x00,0x5f,0x5d,0x46,0x14,0x03,0x02,0x00,0x2d,\
            0x00,0x71,0x02,0x00,0x00,0x04,0x04,0x13,0x13,0x00,0x2e,0x28,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x23,0x2c,0x03,0x01,0x0a,0x2f,0x00,0x1b,0xc5,0xd5,0xa5,0x02,0x00,0xf3,0xa4,0xe3,0x11,0x70,\
            0xe6,0x72,0x00,0x5f,0x5d,0x46,0x14,0x03,0x02,0x00,0x2f,0x00,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x23,0x48,0x72,0x02,0x00,0x00,0x04,0x04,0x13,0x13,0x00,0x30,0x28,0x03,0x01,0x12,0x31,0x00,\
            0x1b,0xc5,0xd5,0xa5,0x02,0x00,0xf3,0xa4,0xe3,0x11,0x70,0xe6,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x23,0x64,0x73,0x00,0x5f,0x5d,0x16,0x04,0x03,0x02,0x00,0x31,0x00,0x73,0x02,0x00,0x00,0x46,\
            0x14,0x03,0x02,0x00,0x32,0x29,0x02,0x01,0x00,0x00,0x04,0x04,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x23,0x80,0x13,0x13,0x00,0x33,0x28,0x03,0x01,0x12,0x34,0x00,0x1b,0xc5,0xd5,0xa5,0x02,0x00,\
            0xf3,0xa4,0xe3,0x11,0x70,0xe6,0x74,0x00,0x5f,0x5d,0x16,0x04,\
        },\
    },\
    {0x00,\
        {\
            0x18,0x06,0x23,0x9c,0x03,0x02,0x00,0x34,0x00,0x74,0x02,0x00,0x00,0x46,0x14,0x03,0x02,0x00,0x35,0x29,\
            0x02,0x01,0x00,0x00,0x00,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x40,0x00,0x2a,0x00,0x01,0x00,0x80,0x04,0x00,0x03,0x00,0x00,0x00,0x51,0x02,0x00,0x02,0x04,\
            0x00,0x0b,0x00,0x0c,0x00,0x43,0x02,0x00,0x02,0x04,0x00,0x0f,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x40,0x1c,0x00,0x10,0x00,0x44,0x02,0x00,0x02,0x04,0x00,0x12,0x00,0x13,0x00,0x41,0x02,0x00,\
            0x02,0x04,0x00,0x15,0x00,0x16,0x00,0x42,0x02,0x00,0x02,0x04,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x40,0x38,0x00,0x18,0x00,0x19,0x00,0x45,0x02,0x00,0x08,0x04,0x00,0x1b,0x00,0x00,0x00,0x21,\
            0x02,0x04,0x00,0x04,0x00,0x1e,0x00,0x00,0x00,0x11,0x02,0x00,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x40,0x54,0x08,0x04,0x00,0x21,0x00,0x00,0x00,0x01,0x02,0x00,0x08,0x04,0x00,0x24,0x00,0x00,\
            0x00,0x02,0x02,0x04,0x00,0x04,0x00,0x26,0x00,0x00,0x00,0x31,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x40,0x70,0x02,0x00,0x02,0x04,0x00,0x29,0x00,0x2a,0x00,0x71,0x02,0x04,0x00,0x04,0x00,0x2d,\
            0x00,0x00,0x00,0x72,0x02,0x04,0x00,0x04,0x00,0x2f,0x00,0x00,\
        },\
    },\
    {0x00,\
        {\
            0x17,0x06,0x40,0x8c,0x00,0x73,0x02,0x00,0x02,0x04,0x00,0x31,0x00,0x32,0x00,0x74,0x02,0x00,0x02,0x04,\
            0x00,0x34,0x00,0x35,\
        },\
    },\
    {0x00,\
        {\
            0x13,0x06,0x50,0x00,0x1b,0xc5,0xd5,0xa5,0x02,0x00,0xf3,0xa4,0xe3,0x11,0x70,0xe6,0x00,0x00,0x5f,0x5d,\
        },\
    },\
    {0x00,\
        {\
            0x1f,0x06,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
        },\
    },\
    {0x00,\
        {\
            0x17,0x06,0x60,0x1c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
            0x00,0x00,0x00,0x00,\
        },\
    },\
    {0x00,\
        {\
            0x06,0x06,0xf0,0x00,0x03,0xa5,0xaa,\
        },\
    },\
}

#endif
